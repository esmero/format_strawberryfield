format_strawberryfield.iiif_settings:
  type: config_object
  label: 'Archipelago IIIF Server configurations'
  mapping:
    pub_server_url:
      type: string
      label: 'Public IIIF server URL'
    int_server_url:
      type: string
      label: 'Internal IIIF server URL'
    iiif_content_search_api_page_count:
      type: integer
      label: 'The max results to show per page on a iiif_content_search_api_page_count'
    iiif_content_search_api_visual_enabled_processors:
      type: string
      label: 'Comma separated list of Strawberry Runner Processors for Visual Annotations (OCR) that can be fetched by the Content Search API on query.'
    iiif_content_search_api_time_enabled_processors:
      type: string
      label: 'Comma separated list of Strawberry Runner Processors for time Annotations (OCR from time) can be fetched by the Content Search API on query.'
    iiif_content_search_api_text_enabled_processors:
      type: string
      label: 'Comma separated list of Strawberry Runner Processors for plain text annotations (no OCR) that can be fetched by the Content Search API on query.'
    iiif_content_search_api_active:
      type: boolean
      label: 'If IIIF Content Search API V1 and V2 are enabled.'
    iiif_content_search_validate_exposed:
      type: boolean
      label: 'If IIIF Only explicit definitions in a manifest allow a search against them'
    iiif_content_search_time_targetannotations:
      type: boolean
      label: 'If IIIF Content Search results for Time based media target the VTT annotation itself or the parent Canvas'
    iiif_content_search_api_parent_node_fields:
      type: sequence
      label: 'Strawberry Flavor Data Source Search API Fields that can be used to connect a Strawberry Flavor to a Parent ADO.'
      sequence:
        type: string
        label: 'A Search API field'
    iiif_content_search_api_file_uri_fields:
      sequence:
        type: string
        label: 'A Search API field'
    iiif_content_search_api_metadata:
      type: boolean
      label: 'If IIIF Content Search Should also search/return metadata.'
    iiiif_content_search_api_metadata_parent_node_fields:
      type: sequence
      label: 'Strawberry ADO Source Search API Fields that can be used to connect a Node to a Parent ADO/or itself.'
      sequence:
        type: string
        label: 'A Search API field'
    iiiif_content_search_api_metadata_node_uuid_fields:
      type: sequence
      label: 'Strawberry ADO Source Search API Field holding its own UUID or other UUIDs.'
      sequence:
        type: string
        label: 'A Search API field'
    iiiif_content_search_api_metadata_node_fulltext_fields:
      type: sequence
      label: 'Strawberry ADO Source Search API Fields to search/math metadata against.'
      sequence:
        type: string
        label: 'A Search API field'
    iiif_content_search_api_results_per_page:
      type: string
      label: 'Number of results per page'
    iiif_content_search_api_query_length:
      type: string
      label: 'max size of the allowed term passed (?q)'


format_strawberryfield.embargo_settings:
  type: config_object
  label: 'Archipelago Metadata Driven Embargo configurations'
  mapping:
    date_until_json_key:
      type: string
      label: 'Which JSON key will contain a Date to lift the embargo'
      default: date_embargoed_until
    ip_json_key:
      type: string
      label: 'Which JSON key will contain a string with IP addresses that are allowed to see this Object'
      default: ip_embargoed
    enabled:
      type: boolean
      label: 'If Embargo is Globally enabled'
      default: false
    file_embargo_enabled:
      type: boolean
      label: 'If File download paths should also inherit embargo.'
      default: false
    global_ip_bypass_enabled:
      type: boolean
      label: 'If Global IP Range Bypass Settings are enabled'
      default: false
    global_ip_bypass_mode:
      type: string
      label: 'Global IP Range Bypass Mode'
      default: 'local'
    global_ip_bypass_addresses:
      type: sequence
      sequence:
        type: string
      label: 'global_ip_bypass_addresses list'

field.formatter.settings.strawberry_audio_formatter:
  type: mapping
  label: 'Specific config for strawberry_audio_formatter'
  mapping:
    iiif_base_url:
      type: string
      label: 'Custom Public IIIF Server URL'
    iiif_base_url_internal:
      type: string
      label: 'Custom internal IIIF Server URL'
    json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing file URIs to display'
    max_width:
      type: string
    max_height:
      type: string
    use_iiif_globals:
      type: string
      label: 'Whether to use global IIIF settings or not.'
    audio_type:
      type: string
    number_media:
      type: integer
    jmespath:
      type: format_strawberryfield.jmespath_config.mapping
      label: 'JMESPath filter expression settings'
    upload_json_key_source:
      type: string
      label: 'Comma separated list of Audio and Subtitle Upload JSON keys to filter against'
    embargo_json_key_source:
      type: string
      label: 'When embargoed, comma separated list of Audio and Subtitle Upload JSON keys to filter against'
    hide_on_embargo:
      type: string
      label: 'Hide Viewer if embargo is resolved as embargoed.'
field.formatter.settings.strawberry_image_formatter:
  type: mapping
  label: 'Specific Config for strawberry_image_formatter'
  mapping:
    iiif_base_url:
      type: string
      label: 'Custom Public IIIF Server URL'
    iiif_base_url_internal:
      type: string
      label: 'Custom internal IIIF Server URL'
    json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing file URIs to display'
    max_width:
      type: string
    max_height:
      type: string
    use_iiif_globals:
      type: string
      label: 'Whether to use global IIIF settings or not.'
    number_images:
      type: string
    image_type:
      type: string
    webannotations:
      type: boolean
    quality:
      type: string
    rotation:
      type: string
    image_link:
      type: boolean
    jmespath:
      type: format_strawberryfield.jmespath_config.mapping
      label: 'JMESPath filter expression settings'
    upload_json_key_source:
      type: string
      label: 'Comma separated list of Image Upload JSON keys to filter against'
    embargo_json_key_source:
      type: string
      label: 'When embargoed, comma separated list of Image Upload JSON keys to filter against'
    hide_on_embargo:
      type: string
      label: 'Hide Viewer if embargo is resolved as embargoed.'
field.formatter.settings.strawberry_media_formatter:
  type: mapping
  label: 'Specific Config for strawberry_media_formatter'
  mapping:
    iiif_base_url:
      type: string
      label: 'Custom Public IIIF Server URL'
    iiif_base_url_internal:
      type: string
      label: 'Custom internal IIIF Server URL'
    json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing file URIs to display'
    max_width:
      type: string
    max_height:
      type: string
    icons_prefixurl:
      type: string
      label: 'Base URL for OpenSeadragon UI/UX/ICONS'
      default: ''
    webannotations:
      type: boolean
    webannotations_tool:
      type: string
      label: 'can be either rect, polygon or both'
    webannotations_opencv:
      type: boolean
      label: 'If OpenCV features are enabled'
    webannotations_betterpolygon:
      type: boolean
      label: 'If Better Polygon plugin is enabled. Only if tool is polygon or both'
    webannotations_georeferencewidget:
      type: boolean
      label: 'If Georeference Annotation Plugin is enabled.'
    use_iiif_globals:
      type: string
      label: 'Whether to use global IIIF settings or not.'
    iiif_group:
      type: boolean
      label: 'Whether multiple media sources should use a single IIIF viewer or not.'
    thumbnails:
      type: boolean
      label: 'TNs?'
    number_images:
      type: integer
      label: 'Number of images'
    jmespath:
      type: format_strawberryfield.jmespath_config.mapping
      label: 'JMESPath filter expression settings'
    upload_json_key_source:
      type: string
    embargo_json_key_source:
      type: string
      label: 'When embargoed, comma separated list of Image Upload JSON keys to filter against'
    hide_on_embargo:
      type: string
      label: 'Hide Viewer if embargo is resolved as embargoed.'
    mediasource:
      type: mapping
      label: 'Sources for IIIF URL'
      mapping:
        manifestnodelist:
          type: string
          label: 'If manifestnodelist is being used'
        metadataexposeentity:
          type: string
          label: 'If metadataexposeentity is being used'
        manifesturl:
          type: string
          label: 'If manifesturl is being used'
    main_mediasource:
      type: string
      label: 'Primary IIIF URL Source used'
    viewer_overrides:
      type: string
      label: 'OSD JSON based Viewer Overrides'

field.formatter.settings.strawberry_3d_formatter:
  type: mapping
  label: 'Specific Config for strawberry_3d_formatter'
  mapping:
    iiif_base_url:
      type: string
      label: 'Custom Public IIIF Server URL'
    iiif_base_url_internal:
      type: string
      label: 'Custom internal IIIF Server URL'
    json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing file URIs to display'
    max_width:
      type: string
    max_height:
      type: string
    use_iiif_globals:
      type: string
      label: 'Whether to use global IIIF settings or not.'
    number_models:
      type: integer
      label: 'Number of 3D Models to load from JSON'
    invert_up_axis:
      type: boolean
      label: 'Number of 3D Models to load from JSON'
    jmespath:
      type: format_strawberryfield.jmespath_config.mapping
      label: 'JMESPath filter expression settings'
    upload_json_key_source:
      type: string
      label: 'Comma separated list of 3D Model, UV textures and MTL Upload JSON keys to filter against'
    embargo_json_key_source:
      type: string
      label: 'When embargoed, comma separated list of 3D Model, UV textures and MTL Upload JSON keys to filter against'
    hide_on_embargo:
      type: string
      label: 'Hide Viewer if embargo is resolved as embargoed.'
field.formatter.settings.strawberry_metadata_formatter:
  type: mapping
  label: 'Specific Config for strawberry_metadata_formatter using Twig'
  mapping:
    iiif_base_url:
      type: string
      label: 'Custom Public IIIF Server URL'
    iiif_base_url_internal:
      type: string
      label: 'Custom internal IIIF Server URL'
    json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing file URIs to display'
    max_width:
      type: integer
    max_height:
      type: integer
    use_iiif_globals:
      type: string
      label: 'Whether to use global IIIF settings or not.'
    label:
      type: string
    specs:
      type: string
    metadatadisplayentity_uuid:
      type: string
    metadatadisplayentity_uselabel:
      type: string
    upload_json_key_source:
      type: string
      label: 'Not used. Comma separated list of Image upload JSON keys to filter against'
    embargo_json_key_source:
      type: string
      label: 'Not used. Inherited. When embargoed, comma separated list of Image Upload JSON keys to filter against'
    hide_on_embargo:
      type: string
      label: 'Hide Viewer if embargo is resolved as embargoed.'
field.formatter.settings.strawberry_paged_formatter:
  type: mapping
  label: 'Specific Config for strawberry_paged_formatter'
  mapping:
    iiif_base_url:
      type: string
      label: 'Custom Public IIIF Server URL'
    iiif_base_url_internal:
      type: string
      label: 'Custom internal IIIF Server URL'
    iiif_group:
      type: boolean
      label: 'Whether multiple media sources should use a single IIIF viewer or not.'
    json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing file URIs to display'
    max_width:
      type: string
    max_height:
      type: string
    use_iiif_globals:
      type: string
      label: 'Whether to use global IIIF settings or not.'
    mediasource:
      type: string
    metadatadisplayentity_uuid:
      type: string
    manifesturl_source:
      type: string
    metadataexposeentity_source:
      type: string
    hascover_json_key_source:
      type: string
      default: hascover
    jmespath:
      type: format_strawberryfield.jmespath_config.mapping
      label: 'JMESPath filter expression settings'
    upload_json_key_source:
      type: string
      label: 'Comma separated list of Image upload JSON keys to filter against'
    embargo_json_key_source:
      type: string
      label: 'When embargoed, comma separated list of Image upload JSON keys to filter against.'
    hide_on_embargo:
      type: string
      label: 'Hide Viewer if embargo is resolved as embargoed.'
    iareaderimagesbaseurl:
      type: string
      label: 'Base URL for IA Reader Images'
      default: 'https://cdn.jsdelivr.net/gh/internetarchive/bookreader@4.40.3/BookReader/images/'
    textselection:
      type: boolean
      label: 'If textselection from DjaVUXML should be enabled or not'

field.formatter.settings.strawberry_pannellum_formatter:
  type: mapping
  label: 'Specific Config for strawberry_pannellum_formatter'
  mapping:
    iiif_base_url:
      type: string
      label: 'Custom Public IIIF Server URL'
    iiif_base_url_internal:
      type: string
      label: 'Custom internal IIIF Server URL'
    json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing file URIs to display'
    max_width:
      type: string
    max_height:
      type: string
    use_iiif_globals:
      type: string
      label: 'Whether to use global IIIF settings or not.'
    hotSpotDebug:
      type: boolean
    image_type:
      type: string
    json_key_hotspots:
      type: string
    json_key_settings:
      type: string
    json_key_multiscene:
      type: string
    panorama_type:
      type: integer
    quality:
      type: string
    rotation:
      type: string
    autoLoad:
      type: boolean
    number_images:
      type: integer
      label: "Number of Images"
    jmespath:
      type: format_strawberryfield.jmespath_config.mapping
      label: 'JMESPath filter expression settings'
    upload_json_key_source:
      type: string
      label: 'Comma separated list of Image Panorama Upload JSON keys to filter against'
    embargo_json_key_source:
      type: string
      label: 'When embargoed, comma separated list of Image Panorama Upload JSON keys to filter against'
    viewer_overrides:
      type: string
      label: 'Pannellum JSON based Viewer Overrides'
    hide_on_embargo:
      type: string
      label: 'Hide Viewer if embargo is resolved as embargoed.'

field.formatter.settings.strawberry_video_formatter:
  type: mapping
  label: 'Specific Config for strawberry_video_formatter'
  mapping:
    iiif_base_url:
      type: string
      label: 'Custom Public IIIF Server URL'
    iiif_base_url_internal:
      type: string
      label: 'Custom internal IIIF Server URL'
    json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing file URIs to display'
    max_width:
      type: string
    max_height:
      type: string
    use_iiif_globals:
      type: string
      label: 'Whether to use global IIIF settings or not.'
    audio_type:
      type: string
    json_key_source_for_poster:
      type: string
    number_media:
      type: integer
    posterframe:
      type: string
    jmespath:
      type: format_strawberryfield.jmespath_config.mapping
      label: 'JMESPath filter expression settings'
    upload_json_key_source:
      type: string
      label: 'Comma separated list of Video and Subtitle Upload JSON keys to filter against'
    embargo_json_key_source:
      type: string
      label: 'When embargoed, comma separated list of Video and Subtitle Upload JSON keys to filter against'
    hide_on_embargo:
      type: string
      label: 'Hide Viewer if embargo is resolved as embargoed.'

field.formatter.settings.strawberry_pdf_formatter:
  type: mapping
  label: 'Specific Config for strawberry_pdf_formatter'
  mapping:
    iiif_base_url:
      type: string
      label: 'Custom Public IIIF Server URL'
    iiif_base_url_internal:
      type: string
      label: 'Custom internal IIIF Server URL'
    json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing file URIs to display'
    max_width:
      type: string
      label: 'Max with for the Viewer. Can be either a % or just a number'
    max_height:
      type: string
    use_iiif_globals:
      type: string
      label: 'Whether to use global IIIF settings or not.'
    number_documents:
      type: integer
      label: 'Number of PDF Documents to load'
    number_pages:
      type: integer
      label: 'Number of Pages to show per PDF'
    initial_page:
      type: integer
      label: 'First Page to display per PDF'
    jmespath:
      type: format_strawberryfield.jmespath_config.mapping
      label: 'JMESPath filter expression settings'
    upload_json_key_source:
      type: string
      label: 'Comma separated list of PDF Upload JSON keys to filter against'
    embargo_json_key_source:
      type: string
      label: 'When embargoed, comma separated list of PDF Upload JSON keys to filter against'
    hide_on_embargo:
      type: string
      label: 'Hide Viewer if embargo is resolved as embargoed.'

field.formatter.settings.strawberry_uv_formatter:
  type: mapping
  label: 'Specific Config for strawberry_uv_formatter'
  mapping:
    iiif_base_url:
      type: string
      label: 'Custom Public IIIF Server URL'
    iiif_base_url_internal:
      type: string
      label: 'Custom internal IIIF Server URL'
    metadataexposeentity_source:
      type: string
      label: 'metadataexpose_entity machine name'
    max_width:
      type: string
      label: 'Max with for the Viewer. Can be either a % or just a number'
    max_height:
      type: string
    use_iiif_globals:
      type: string
      label: 'Whether to use global IIIF settings or not.'
    hide_on_embargo:
      type: string
      label: 'Hide Viewer if embargo is resolved as embargoed.'
    upload_json_key_source:
      type: string
      label: 'Not used. Inherited. Comma separated list of Image Upload JSON keys to filter against'
    embargo_json_key_source:
      type: string
      label: 'Not used. Inherited. When embargoed, comma separated list of Image Upload JSON keys to filter against'
field.formatter.settings.strawberry_mirador_formatter:
  type: mapping
  label: 'Specific Config for strawberry_mirador_formatter'
  mapping:
    iiif_base_url:
      type: string
      label: 'Custom Public IIIF Server URL'
    iiif_base_url_internal:
      type: string
      label: 'Custom internal IIIF Server URL'
    custom_js:
      type: boolean
      label: 'If custom Mirador with plugin is going to be used instead of Vanilla CDN'
    mirador_version:
      type: integer
      label: 'Version 3 or 4 from CDN. Does not apply if custom is selectoed'
    mediasource:
      type: mapping
      label: 'Sources for IIIF URL'
      mapping:
        manifestnodelist:
          type: string
          label: 'If manifestnodelist is being used'
        metadataexposeentity:
          type: string
          label: 'If metadataexposeentity is being used'
        manifesturl:
          type: string
          label: 'If manifesturl is being used'
    main_mediasource:
      type: string
      label: 'Primary IIIF URL Source used'
    metadataexposeentity_source:
      type: string
      label: 'metadataexpose_entity machine name'
    manifestnodelist_json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing NODE ids or UUIDs from which to generate Manifest URLs'
    manifesturl_json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing IIIF Manifest URLs to display'
    max_width:
      type: string
      label: 'Max with for the Viewer. Can be either a % or just a number'
    max_height:
      type: string
    use_iiif_globals:
      type: string
      label: 'Whether to use global IIIF settings or not.'
    upload_json_key_source:
      type: string
      label: 'Not used. Inherited. Comma separated list of Image Upload JSON keys to filter against'
    embargo_json_key_source:
      type: string
      label: 'Not used. Inherited. When embargoed, comma separated list of Image Upload JSON keys to filter against'
    hide_on_embargo:
      type: string
      label: 'Hide Viewer if embargo is resolved as embargoed.'
    viewer_overrides:
      type: string
      label: 'Mirador settings via JSON Overrides'

field.formatter.settings.strawberry_warc_formatter:
  type: mapping
  label: 'Specific Config for strawberry_warc_formatter'
  mapping:
    iiif_base_url:
      type: string
      label: 'Custom Public IIIF Server URL'
    iiif_base_url_internal:
      type: string
      label: 'Custom internal IIIF Server URL'
    navbar:
      type: boolean
      label: 'Whether to show or not the embeded widget browser nav bar'
    json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing file URIs to display'
    warcurl_json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing an URL of a warc to fetch'
    max_width:
      type: string
    max_height:
      type: string
    use_iiif_globals:
      type: string
      label: 'Whether to use global IIIF settings or not.'
    json_key_starting_url:
      type: string
    jmespath:
      type: format_strawberryfield.jmespath_config.mapping
      label: 'JMESPath filter expression settings'
    upload_json_key_source:
      type: string
      label: 'Comma separated list of WebArchive packages Upload JSON keys to filter against'
    embargo_json_key_source:
      type: string
      label: 'When embargoed, comma separated list of WebArchive packages Upload JSON keys to filter against'
    hide_on_embargo:
      type: string
      label: 'Hide Viewer if embargo is resolved as embargoed.'

# Multiple JSON type / View Mode Mappings
format_strawberryfield.viewmodemapping_settings:
  type: config_object
  label: 'Archipelago View Mode to JSON Type Key mapping Configurations'
  mapping:
    type_to_viewmode:
      type: sequence
      label: 'JSON type key to View Mode Mapping'
      sequence:
        type: format_strawberryfield.viewmodemapping_settings.mapping

format_strawberryfield.viewmodemapping_settings.mapping:
  type: mapping
  label: 'JSON Type Key/ View Mode pair'
  mapping:
    jsontype:
      type: string
      label: 'JSON Type Key'
    view_mode:
      type: string
      label: 'View mode'
    active:
      type: boolean
      label: 'Whether this Config pair is enabled or not'
    weight:
      type: integer
      label: 'Order in which this is evaluated'

field.formatter.settings.strawberry_map_formatter:
  type: mapping
  label: 'Specific Config for strawberry_map_formatter'
  mapping:
    json_key_source:
        type: string
        label: 'JSON or JMESPATH that conditions rendering. If empty will always render'
    iiif_base_url:
      type: string
      label: 'Custom Public IIIF Server URL'
    iiif_base_url_internal:
      type: string
      label: 'Custom internal IIIF Server URL'
    metadataexposeentity:
      type: string
      label: 'Machine name of the exposed Metadata Config Entity endpoint'
    mediasource:
      type: mapping
      label: 'Sources for GeoJSON URL'
      mapping:
        geojsonnodelist:
          type: string
          label: 'If geojsonnodelist is being used'
        metadataexposeentity:
          type: string
          label: 'If metadataexposeentity is being used'
        geojsonurl:
          type: string
          label: 'If geojsonurl is being used'
    main_mediasource:
      type: string
      label: 'Primary GeoJSON Source used'
    metadataexposeentity_source:
      type: string
      label: 'metadataexpose_entity machine name'
    geojsonnodelist_json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing NODE ids or UUIDs from which to generate GeoJSON URLs'
    geojsonurl_json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing GeoJSON URLs to display'
    max_width:
      type: string
      label: 'Max with for the Map. 0 to force 100% width'
    max_height:
      type: string
    initial_zoom:
      type: integer
      label: 'Initial Zoom for the Map'
    max_zoom:
      type: integer
      label: 'Max Zoom for the Map'
    min_zoom:
      type: integer
      label: 'Min Zoom for the Map'
    disable_mouse_zoom:
      type: boolean
      label: "Disable mouse wheel zoom"
    tilemap_url:
      type: string
      label: 'Tile Map URL'
    tilemap_attribution:
      type: string
      label: 'Tile Map Attribution String'
    use_iiif_globals:
      type: string
      label: 'Whether to use global IIIF settings or not.'
    upload_json_key_source:
      type: string
      label: 'Not used. Comma separated list of Image upload JSON keys to filter against'
    embargo_json_key_source:
      type: string
      label: 'Not used. Inherited. When embargoed, comma separated list of Image Upload JSON keys to filter against'
    hide_on_embargo:
      type: string
      label: 'Hide Viewer if embargo is resolved as embargoed.'
# Given any DS field plugin formatter key a type
ds.field_plugin.*:
  type: mapping
  mapping:
    formatter:
      type: field.formatter.settings.[%parent.%parent.formatter]
      label: "Formatter settings for a generic ds.field plugin"

# Reusable JMESPath Config schema for File dependant Formatters
format_strawberryfield.jmespath_config.mapping:
  type: mapping
  label: 'JMESPath Config to be used in Formatters using direct access to Files'
  mapping:
    use_jmespath:
      type: boolean
      label: 'Whether to use JMESPath Expression to Filter Files'
    fallback_jmespath:
      type: boolean
      label: 'Whether to use the base defaults in case JMESPath Expression returns null or not'
    jmespath_filter:
      type: string
      label: 'A JMESPath filter expression'
    jmespath_alternative_filter:
      type: string
      label: 'An alternative JMESPath filter expression'

field.formatter.settings.strawberry_citation_formatter:
  type: mapping
  label: 'Specific Config for strawberry_metadata_formatter using Twig'
  mapping:
    iiif_base_url:
      type: string
      label: 'Custom Public IIIF Server URL'
    iiif_base_url_internal:
      type: string
      label: 'Custom internal IIIF Server URL'
    json_key_source:
      type: string
      label: 'Strawberryfield/JSON key containing file URIs to display'
    max_width:
      type: integer
    max_height:
      type: integer
    use_iiif_globals:
      type: string
      label: 'Whether to use global IIIF settings or not.'
    label:
      type: string
    metadatadisplayentity_uuid:
      type: string
    metadatadisplayentity_uselabel:
      type: string
    citationstyle:
      type: mapping
      mapping:
        type: string
        label: 'style'
    localekey:
      type: string
    hide_on_embargo:
      type: string
      label: 'Hide Viewer if embargo is resolved as embargoed.'
condition.plugin.ado_type_condition:
  type: condition.plugin
  label: 'ADO Type Condition'
  mapping:
    ado_types:
      type: sequence
      label: 'ADO Type'
      sequence:
        type: string
    recurse_ado_types:
      type: boolean
      label: 'Recurse metadata'
condition.plugin.ado_jmespath_condition:
  type: condition.plugin
  label: 'ADO JMESPATH Condition'
  mapping:
    ado_jmespaths:
      type: sequence
      label: 'ADO JMESPATHS'
      sequence:
        type: string
condition.plugin.ado_flavor_condition:
  type: condition.plugin
  label: 'ADO Flavor Condition'
  mapping:
    ado_flavors:
      type: sequence
      label: 'ADO Flavors'
      sequence:
        type: string
    ado_flavors_op:
      type: boolean
      label: 'If all Flavours need to match'
    ado_direct:
      type: boolean
      label: 'IF ADO has indexed (Search API) Flavor'
    ado_children:
      type: boolean
      label: 'IF Children of ADO have at least one indexed (Search API) Flavour'
    ado_grandchildren:
      type: boolean
      label: 'IF Grand Children of ADO have at least one indexed (Search API) Flavour'
    ado_level_op:
      type: boolean
      label: 'IF all child levels need to match'